#pragma once

#include "types"
#include "declarations"
#include <functional>
#include "../../interfaces/location_manager"
#include "../../interfaces/evaluator"
#include "../../interfaces/controller"

namespace Imagina {
	class im_export StandardLocationManager {
		IComplexLocationSink evaluator = nullptr;
		MultiPrecision &mp;
		HPReal referenceX, referenceY;
		IController controller = nullptr;
		void *callbackData;

	public:
		StandardLocationManager(MultiPrecision &mp) : mp(mp), referenceX(0.0, mp), referenceY(0.0, mp) {}

		void SetController(IController controller);
		void SetEvaluator(IComplexLocationSink evaluator);
		void LocationChanged(const HRLocation &location);
	};
}